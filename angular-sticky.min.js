/*!
 * @license CC0 1.0 Universal License
 */
(function(a){angular.module(a,[]).directive(a,["$timeout","$log",function(b,c){if(window.matchMedia===undefined){return{link:function(){c.error("angular-sticky requires window.matchMedia, which your browser does not seem to support.  Please load a shim layer like https://github.com/weblinc/media-match to provide that functionality.")}}}return{link:function(d,C,y){c.debug("[angular-sticky create]");var f=C[0],w=f.ownerDocument,n=w.defaultView,o=y[a+"WrapperTag"]||"span",F=y[a+"WrapperProvided"]||"false",k,D=f.getAttribute("style"),r=y[a+"Style"]||"",i=y[a+"Class"]||"",u=y[a+"PositionUsingStyle"]||"true",v=y[a+"InitDelay"]||1,m=parseFloat(y[a+"Bottom"]),l=n.matchMedia(y[a+"Media"]||"all"),t=parseFloat(y[a+"Top"]),q=false,x=false,j={},B,e={attributes:true,childList:true,characterData:true,subtree:true};u=(u.toLowerCase().trim()==="true");F=(F.toLowerCase().trim()==="true");if(F){c.debug("[angular-sticky create] using provided wrapper");k=f.parentNode}else{k=w.createElement(o)}function h(){c.debug("[angular-sticky activate]");var I=getComputedStyle(f),H=x?"top:"+t:"bottom:"+m,G=f.parentNode,K=f.nextSibling,L,J;if(!F){k.appendChild(f);if(G){G.insertBefore(k,K)}}k.setAttribute("style","display:"+I.display+";height:"+f.offsetHeight+"px;margin:"+I.margin+";width:"+f.offsetWidth+"px;"+r);L=angular.element(k);L.addClass("is-"+a);J="left:"+j.left+"px;margin:0;position:fixed;transition:none;"+H+"px;";f.setAttribute("style",(u?J:"")+"width:"+I.width+";"+r);if(!u){C.addClass(i)}}function g(){c.debug("[angular-sticky deactivate]");var G=k.parentNode,I=angular.element(k),H=k.nextSibling;if(!F){G.removeChild(k);G.insertBefore(f,H)}if(!D){f.removeAttribute("style")}else{f.setAttribute("style",D)}C.removeClass(i);I.removeClass("is-"+a);k.removeAttribute("style");x=q=false}function E(){c.debug("[angular-sticky onscroll]");if(x||q){j=k.getBoundingClientRect();q=!isNaN(m)&&j.top>n.innerHeight-m-k.offsetHeight;x=!isNaN(t)&&j.top<t;if(!x&&!q){g()}}else{if(l.matches){j=f.getBoundingClientRect();q=!isNaN(m)&&j.top>n.innerHeight-m-f.offsetHeight;x=!isNaN(t)&&j.top<t;if(x||q){h()}}}}function A(){c.debug("[angular-sticky onresize]");if(x||q){g()}E()}function z(){c.debug("[angular-sticky ondestroy]");A();n.removeEventListener("scroll",E);n.removeEventListener("resize",A)}function p(){B.observe(f,e)}function s(){B.disconnect()}n.addEventListener("scroll",E);n.addEventListener("resize",A);if("MutationObserver" in n){c.debug("[angular-sticky create] mutation observer found");B=new MutationObserver(function(G){G.forEach(function(H){if(H.type!=="attributes"){return}switch(H.attributeName){case"class":case"style":break;default:return}if(k.offsetHeight===f.offsetHeight){return}c.debug("[angular-sticky mutation-observer]");s();A();p()})});p()}else{c.warn("MutationObserver support not found in your browser.  There may be problems if the sticky bar content is dynamic.")}d.$on("$destroy",z);b(function(){c.debug("[angular-sticky initialize]");E()},v)}}}])}("sticky"));